/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DAO.BranchDAO;
import DAO.EmployeeDAO;
import helper.DateHelper;
import helper.DialogHelper;
import helper.ShareHelper;
import helper.UtilitiesHelper;
import java.awt.Image;
import java.awt.Rectangle;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import model.Branch;
import model.Employee;

/**
 *
 * @author Long
 */
public class EmployeeJInternalFrame extends javax.swing.JInternalFrame {

    int index = 0; // vị trí của nhân viên đang hiển thị trên form
    EmployeeDAO dao = new EmployeeDAO();
    BranchDAO branchDAO = new BranchDAO();
    JFileChooser fileChooser = new JFileChooser("src\\avatars");

    /**
     * Creates new form NhanVienJInternalFrame
     */
    public EmployeeJInternalFrame(JFrame frame) {
        ShareHelper.frame = frame;
        initComponents();
        init();
        setTitle("Employee Manager");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTextField1 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGridView = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnLast = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        lblFullName = new javax.swing.JLabel();
        txtFullName = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        lblConfirmPassword = new javax.swing.JLabel();
        txtConfirmPassword = new javax.swing.JPasswordField();
        txtDateOfBirth = new javax.swing.JFormattedTextField();
        lblDateOfBirth = new javax.swing.JLabel();
        txtDateOfWork = new javax.swing.JFormattedTextField();
        lblDateStartWork = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblAddress1 = new javax.swing.JLabel();
        lblEmail1 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblPhone1 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        lblRole = new javax.swing.JLabel();
        rdoPharmacist = new javax.swing.JRadioButton();
        rdoManager = new javax.swing.JRadioButton();
        rdoBoss = new javax.swing.JRadioButton();
        lblDaiLy = new javax.swing.JLabel();
        cboRanch = new javax.swing.JComboBox();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblAvatar = new javax.swing.JLabel();
        lblAvatar1 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setClosable(true);
        setTitle("Pharma4U - Employee Management");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
        });

        jScrollPane2.setBorder(null);

        tblGridView.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tblGridView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Employee ID", "Role", "Full Name", "DOB", "Starting date", "Phone", "Email", "Address", "Store ID", "Status"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tblGridView.setRowHeight(30);
        tblGridView.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tblGridViewMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblGridView);
        if (tblGridView.getColumnModel().getColumnCount() > 0)
        {
            tblGridView.getColumnModel().getColumn(0).setPreferredWidth(60);
            tblGridView.getColumnModel().getColumn(2).setResizable(false);
            tblGridView.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblGridView.getColumnModel().getColumn(3).setPreferredWidth(60);
        }

        jPanel2.setLayout(new java.awt.GridLayout(1, 3, 10, 10));

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/last.png"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnLastActionPerformed(evt);
            }
        });

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/next.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnNextActionPerformed(evt);
            }
        });

        btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/prev.png"))); // NOI18N
        btnPrev.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnPrevActionPerformed(evt);
            }
        });

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/first.png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnFirstActionPerformed(evt);
            }
        });

        lblID.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblID.setText("Employee ID");

        txtID.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        lblFullName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblFullName.setText("Full Name");

        txtFullName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        lblPassword.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblPassword.setText("Password");

        txtPassword.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        lblConfirmPassword.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblConfirmPassword.setText("Confirm Password");

        txtConfirmPassword.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtDateOfBirth.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("MM/dd/yyyy"))));
        txtDateOfBirth.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        lblDateOfBirth.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblDateOfBirth.setText("Date of birth");

        txtDateOfWork.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("MM/dd/yyyy"))));
        txtDateOfWork.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        lblDateStartWork.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblDateStartWork.setText("Start date of work");

        txtAddress.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        lblAddress1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAddress1.setText("Address");

        lblEmail1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEmail1.setText("Email");

        txtEmail.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        lblPhone1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblPhone1.setText("Phone number");

        txtPhone.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        lblRole.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblRole.setText("Positon");

        buttonGroup1.add(rdoPharmacist);
        rdoPharmacist.setText("Pharmacist");

        buttonGroup1.add(rdoManager);
        rdoManager.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        rdoManager.setText("Manager");

        buttonGroup1.add(rdoBoss);
        rdoBoss.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        rdoBoss.setSelected(true);
        rdoBoss.setText("Boss");

        lblDaiLy.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblDaiLy.setText("Branch");

        cboRanch.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cboRanch.setMinimumSize(new java.awt.Dimension(43, 30));
        cboRanch.setPreferredSize(new java.awt.Dimension(40, 30));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAddress)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtConfirmPassword)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDateOfWork)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(lblDateStartWork, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addComponent(lblAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail)
                    .addComponent(txtPhone)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDaiLy, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRole, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(rdoBoss)
                                .addGap(18, 18, 18)
                                .addComponent(rdoManager, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdoPharmacist))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboRanch, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(lblPhone1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDateStartWork, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDateOfWork, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblAddress1)
                .addGap(2, 2, 2)
                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPhone1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRole, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoBoss)
                    .addComponent(rdoManager)
                    .addComponent(rdoPharmacist))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboRanch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDaiLy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnInsert.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/save.png"))); // NOI18N
        btnInsert.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/refesh.png"))); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bin.png"))); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNew.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/new.png"))); // NOI18N
        btnNew.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnNewActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblAvatar.setAutoscrolls(true);
        lblAvatar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblAvatar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblAvatar.setInheritsPopupMenu(false);
        lblAvatar.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                lblAvatarMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAvatar, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        lblAvatar1.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        lblAvatar1.setForeground(new java.awt.Color(0, 0, 204));
        lblAvatar1.setText("AVATAR");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1001, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(163, 163, 163)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(241, 241, 241)
                                .addComponent(lblAvatar1)))))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(535, 535, 535)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblAvatar1)
                        .addGap(53, 53, 53)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        this.fillToCombobox();
        this.load();
        this.clear();
        this.setStatus(true);
    }//GEN-LAST:event_formInternalFrameOpened

    private void tblGridViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGridViewMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            this.index = tblGridView.rowAtPoint(evt.getPoint());
            if (this.index >= 0) {
                this.edit();
            }
        }
    }//GEN-LAST:event_tblGridViewMouseClicked

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        this.clear();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        this.insert();
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        this.update();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        this.index = 0;
        this.scroll();
        this.edit();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        this.index--;
        this.scroll();
        this.edit();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        this.index++;
        this.scroll();
        this.edit();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        this.index = tblGridView.getRowCount() - 1;
        this.scroll();
        this.edit();
    }//GEN-LAST:event_btnLastActionPerformed

    private void lblAvatarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAvatarMousePressed
        // TODO add your handling code here:
        this.selectImage();
    }//GEN-LAST:event_lblAvatarMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cboRanch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblAddress1;
    private javax.swing.JLabel lblAvatar;
    private javax.swing.JLabel lblAvatar1;
    private javax.swing.JLabel lblConfirmPassword;
    private javax.swing.JLabel lblDaiLy;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblDateStartWork;
    private javax.swing.JLabel lblEmail1;
    private javax.swing.JLabel lblFullName;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhone1;
    private javax.swing.JLabel lblRole;
    private javax.swing.JRadioButton rdoBoss;
    private javax.swing.JRadioButton rdoManager;
    private javax.swing.JRadioButton rdoPharmacist;
    private javax.swing.JTable tblGridView;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JFormattedTextField txtDateOfBirth;
    private javax.swing.JFormattedTextField txtDateOfWork;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtID;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables

    void init() {
        setFrameIcon(ShareHelper.APP_ICON);
        if (ShareHelper.USER.getStoreID() != null) {
            rdoBoss.setEnabled(false);
            rdoManager.setEnabled(false);
        }
    }

    public void scroll() {
        tblGridView.setRowSelectionInterval(index, index);
        Rectangle cellRect = tblGridView.getCellRect(index, 0, false);
        tblGridView.scrollRectToVisible(cellRect);
    }

    void load() {
        DefaultTableModel model = (DefaultTableModel) tblGridView.getModel();
        model.setRowCount(0);
        String vaiTro = "";
        try {
            List<Employee> list = null;
            if (ShareHelper.USER.getStoreID() == null || ShareHelper.USER.getStoreID().length() == 0) {
                list = dao.select();
            } else {
                list = dao.findByBranch(ShareHelper.USER.getStoreID());
            }
            for (Employee nv : list) {
                if (nv.isRole() && (nv.getStoreID() == null || nv.getStoreID().length() == 0)) {
                    vaiTro = "Boss";
                } else if (nv.isRole() && (nv.getStoreID().length() > 0)) {
                    vaiTro = "Manager";
                } else {
                    vaiTro = "Pharmacist";
                }
                Object[] row = {
                    nv.getEmployeeID(),
                    vaiTro,
                    nv.getName(),
                    nv.getDateOfBirth(),
                    nv.getStartDate(),
                    nv.getPhone(),
                    nv.getEmail(),
                    nv.getAddress(),
                    nv.getStoreID(),
                    nv.getStatus()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Database access error!");
        }
    }

    void edit() {
        ShareHelper.file = new File("src\\avatars\\default.png");
        try {
            String manv = (String) tblGridView.getValueAt(this.index, 0);
            Employee model = dao.findById(manv);
            if (model != null) {
                this.setModel(model);
                this.setStatus(false);
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Database access error!");
        }
    }

    void clear() {
        ShareHelper.file = new File("src\\avatars\\default.png");
        this.setModel(new Employee());
        this.setStatus(true);
        this.tblGridView.clearSelection();
    }

    void setModel(Employee model) {
        txtID.setText(model.getEmployeeID());
        txtPassword.setText(model.getPassword());
        txtConfirmPassword.setText(model.getPassword());
        txtFullName.setText(model.getName());
        txtDateOfBirth.setText(DateHelper.toString(model.getDateOfBirth()));
        txtDateOfWork.setText(DateHelper.toString(model.getStartDate()));
        txtPhone.setText(model.getPhone());
        txtEmail.setText(model.getEmail());
        txtAddress.setText(model.getAddress());
        if (model.isRole() && (model.getStoreID() == null || model.getStoreID().length() == 0)) {
            rdoBoss.setSelected(true);
        } else if (model.isRole() && model.getStoreID().length() > 0) {
            rdoManager.setSelected(true);
        } else {
            rdoPharmacist.setSelected(true);
        }
        if (model.getAvatar() != null) {
            Image image = null;
            try {
                image = ImageIO.read(new ByteArrayInputStream(model.getAvatar()));
                ImageIcon icon = new ImageIcon(image);
                image = icon.getImage().getScaledInstance(lblAvatar.getWidth(), lblAvatar.getHeight(), Image.SCALE_DEFAULT);
                FileOutputStream fileOutputStream = new FileOutputStream("src\\avatars\\default1.png");
                fileOutputStream.write(model.getAvatar());
                ShareHelper.file = new File("src\\avatars\\default1.png");
            } catch (IOException ex) {
                Logger.getLogger(EmployeeJInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            lblAvatar.setIcon(new ImageIcon(image));
        } else {
            Image image = null;
            try {
                ShareHelper.fileInputStream = new FileInputStream(ShareHelper.file);
                image = ImageIO.read(ShareHelper.fileInputStream);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            ImageIcon icon = new ImageIcon(image);
            image = icon.getImage().getScaledInstance(lblAvatar.getWidth(), lblAvatar.getHeight(), Image.SCALE_DEFAULT);
            lblAvatar.setIcon(new ImageIcon(image));
        }
        cboRanch.getModel().setSelectedItem(new BranchDAO().findById(model.getStoreID()));
    }

    Employee getModel() {
        Employee model = new Employee();
        model.setEmployeeID(txtID.getText());
        model.setPassword(new String(txtPassword.getPassword()));
        if (rdoBoss.isSelected() || rdoManager.isSelected()) {
            model.setRole(true);
        } else {
            model.setRole(false);
        }
        model.setName(txtFullName.getText());
        model.setDateOfBirth(DateHelper.toDate(txtDateOfBirth.getText()));
        model.setStartDate(DateHelper.toDate(txtDateOfWork.getText()));
        model.setPhone(txtPhone.getText());
        model.setEmail(txtEmail.getText());
        model.setAddress(txtAddress.getText());
        try {
            model.setAvatar(Files.readAllBytes(ShareHelper.file.toPath()));
        } catch (IOException ex) {
            model.setAvatar(null);
        }
//        model.setAvatar(ShareHelper.fileInputStream);
        if (rdoBoss.isSelected()) {
            model.setStoreID(null);
        } else {
            model.setStoreID(((Branch) cboRanch.getSelectedItem()).getBranchID());
        }
        return model;
    }

    void setStatus(boolean insertable) {
        txtID.setEditable(insertable);
        btnInsert.setEnabled(insertable);
        btnUpdate.setEnabled(!insertable);
        btnDelete.setEnabled(!insertable);
        boolean first = this.index > 0;
        boolean last = this.index < tblGridView.getRowCount() - 1;
        btnFirst.setEnabled(!insertable && first);
        btnPrev.setEnabled(!insertable && first);
        btnNext.setEnabled(!insertable && last);
        btnLast.setEnabled(!insertable && last);
    }

    void fillToCombobox() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboRanch.getModel();
        model.removeAllElements();
        try {
            List<Branch> list = new ArrayList<>();
            if (ShareHelper.USER.getStoreID() == null) {
                list = branchDAO.select();
            } else {
                ShareHelper.Branch = branchDAO.findById(ShareHelper.USER.getStoreID());
                list.add(ShareHelper.Branch);
            }
            for (Branch branch : list) {
                model.addElement(branch);
            }
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Database access error!");
        }
    }

    void selectImage() {
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            ShareHelper.file = file;
            Image image = null;
            if (ShareHelper.saveLogo(file)) {
                try {
                    // Hiển thị hình lên form
                    ShareHelper.fileInputStream = new FileInputStream(ShareHelper.file);
                    image = ImageIO.read(ShareHelper.fileInputStream);
                } catch (Exception ex) {
                    Logger.getLogger(EmployeeJInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                ImageIcon icon = new ImageIcon(image);
                image = icon.getImage().getScaledInstance(lblAvatar.getWidth(), lblAvatar.getHeight(), Image.SCALE_DEFAULT);
                lblAvatar.setIcon(new ImageIcon(image));
            }
        }
    }

    void insert() {
        if (!checkExists()) {
            return;
        }
        if (!validateForm()) {
            return;
        }
        Employee model = getModel();

        String confirm = new String(txtConfirmPassword.getPassword());
        if (confirm.equals(model.getPassword())) {
            try {
                dao.insert(model);
                this.load();
                this.clear();
                DialogHelper.alert(this, "Insert successfully!");
            } catch (Exception e) {
                e.printStackTrace();
                DialogHelper.alert(this, "Insert failed!");
            }
        } else {
            DialogHelper.alert(this, "Password comfirm is incorect!");
            txtConfirmPassword.requestFocus();
        }
    }

    void update() {
        if (!validateForm()) {
            return;
        }
        Employee model = getModel();

        String confirm = new String(txtConfirmPassword.getPassword());
        if (!confirm.equals(model.getPassword())) {
            DialogHelper.alert(this, "Password comfirm is incorect!");
            txtConfirmPassword.requestFocus();
        } else {
            try {
                dao.update(model);
                this.load();
                DialogHelper.alert(this, "Update successfully!");
            } catch (Exception e) {
                DialogHelper.alert(this, "Update faied!");
            }
        }
    }

    void delete() {
        new ConfirmDeleteHelper(ShareHelper.frame, true).setVisible(true);
        if (ShareHelper.status != null) {
            Employee model = dao.findById(txtID.getText());
            model.setStatus(ShareHelper.status);
            try {
                dao.updateStatus(model);
                this.load();
                DialogHelper.alert(this, "Update successfully!");
                ShareHelper.status = null;
            } catch (Exception e) {
                DialogHelper.alert(this, "Update failed!");
            }
        }
    }

    boolean checkExists() {
        if (UtilitiesHelper.checkNull(txtID, "ID")) {
            return false;
        } else {
            List<Employee> list = dao.select();
            for (int i = 0; i < list.size(); i++) {
                if (txtID.getText().trim().equals(list.get(i).getEmployeeID())) {
                    DialogHelper.alert(this, "This Employee ID already exists");
                    txtID.requestFocus();
                    return false;
                }
            }
        }
        return true;
    }

    boolean validateForm() {
        if (UtilitiesHelper.checkNull(txtFullName, "Name")) {
            return false;
        } else if (!UtilitiesHelper.checkIsAlphabet(txtFullName, "Name")) {
            return false;
        }

        if (UtilitiesHelper.checkNull(txtPassword, "Password")) {
            return false;
        } else if (UtilitiesHelper.checkSize(txtPassword, 3)) {
            return false;
        }

        if (!(new String(txtConfirmPassword.getPassword())).equals(new String(txtPassword.getPassword()))) {
            DialogHelper.alert(this, "Password and confirm password does not match");
            txtConfirmPassword.requestFocus();
            return false;
        }

        if (UtilitiesHelper.checkNull(txtDateOfBirth, "Input date format MM/dd/yyyy")) {
            return false;
        }

        if (UtilitiesHelper.checkNull(txtDateOfWork, "Input date format MM/dd/yyyy")) {
            return false;
        }

        if (UtilitiesHelper.checkNull(txtAddress, "Address")) {
            return false;
        }

        if (UtilitiesHelper.checkNull(txtEmail, "Email")) {
            return false;
        } else if (!UtilitiesHelper.checkEmail(txtEmail)) {
            return false;
        }

        if (UtilitiesHelper.checkNull(txtPhone, "Phone number")) {
            return false;
        } else if (!UtilitiesHelper.checkPhone(txtPhone)) {
            return false;
        }

        if (!rdoBoss.isSelected() && cboRanch.getSelectedItem() == null) {
            DialogHelper.alert(this, "Select a branch");
            return false;
        }

        if (lblAvatar.getIcon() == null) {
            DialogHelper.alert(this, "Empty avatar");
            return false;
        }
        return true;
    }
}
